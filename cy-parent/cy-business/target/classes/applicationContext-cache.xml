<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:c="http://www.springframework.org/schema/c"
        xmlns:cache="http://www.springframework.org/schema/cache"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">
     <description>spring-redis-cache配置文件</description>
          
     <!-- 配置redis和spring 的整合 -->
     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
         <property name="maxTotal" value="${redis.maxTotal}" />
         <property name="maxIdle" value="${redis.maxIdle}" />
         <property name="maxWaitMillis" value="${redis.maxWaitMills}" />
         <!-- <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" /> -->
     </bean>
     <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
         <property name="hostName" value="${redis.masterHost}" />
         <property name="port" value="${redis.masterPort}" />
         <property name="timeout" value="${redis.timeout}" />
         <property name="password" value="${redis.masterPassword}" />
         <property name="poolConfig" ref="jedisPoolConfig" />
     </bean>
     <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
         <property name="connectionFactory" ref="jedisConnectionFactory" />
         <!-- 开启事务 -->
         <property name="enableTransactionSupport" value="true" />
         <property name="keySerializer">
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
         </property>
         <property name="valueSerializer">
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
         </property>
         <property name="hashKeySerializer">
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
         </property>
         <property name="hashValueSerializer">
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
         </property>
     </bean>
     <!--spring cache-->
     <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
           c:redisOperations-ref="redisTemplate">
         <!-- 默认缓存20分钟 -->
         <property name="defaultExpiration" value="1200"/>
         <property name="usePrefix" value="true"/>
         <!-- cacheName 缓存超时配置，半小时，一小时，一天 -->
         <property name="expires">
             <map key-type="java.lang.String" value-type="java.lang.Long">
                 <entry key="halfHour" value="1800"/>
                 <entry key="hour" value="3600"/>
                 <entry key="oneDay" value="86400"/>
                 <!-- shiro cache keys 对缓存的配置 -->
                 <!--entry key="authorizationCache" value="1800"/-->
                 <!--entry key="authenticationCache" value="1800"/-->
                 <!--entry key="activeSessionCache" value="1800"/-->
             </map>
         </property>
     </bean>
     <!-- 由于session频繁读取redis,造成速度奇慢无比，所以整个本地内存缓存-->
     <bean id="nativeEhCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    	<property name="configLocation" value="classpath:ehcache.xml" />
    	<property name="shared" value="true"></property>
	</bean>
	<!-- spring 封装ehcache缓存管理器  -->
    <bean id="springCacheManager"
        class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="nativeEhCacheManager" />
    </bean>
     <!-- 配置RedisCacheConfig 加进去之后，缓存不起作用-->
    <!-- bean id="redisCacheConfig" class="com.xh.ac.common.configuration.RedisCacheConfig">
        <constructor-arg ref="jedisConnectionFactory"/>
        <constructor-arg ref="redisTemplate"/>
        <constructor-arg ref="cacheManager"/>
    </bean -->
     <!-- cache注解，和spring-ehcache.xml中的只能使用一个 -->
     <cache:annotation-driven cache-manager="redisCacheManager" proxy-target-class="true"/>
 </beans>    